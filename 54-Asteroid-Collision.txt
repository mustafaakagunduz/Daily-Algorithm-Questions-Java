We are given an array asteroids of integers representing asteroids in a row. The indices of the asteriod in the array represent their relative position in space.

For each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.

Find out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.

 

Example 1:

Input: asteroids = [5,10,-5]
Output: [5,10]
Explanation: The 10 and -5 collide resulting in 10. The 5 and 10 never collide.
Example 2:

Input: asteroids = [8,-8]
Output: []
Explanation: The 8 and -8 collide exploding each other.
Example 3:

Input: asteroids = [10,2,-5]
Output: [10]
Explanation: The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.

---

class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<>();
        
        for (int asteroid : asteroids) {
            boolean destroyed = false;
            
            // Çarpışma kontrolü - sağa giden bir asteroit ile sola giden bir asteroit çarpışabilir
            while (!stack.isEmpty() && stack.peek() > 0 && asteroid < 0 && !destroyed) {
                int topAsteroid = stack.peek();
                
                // Eğer stack'teki asteroit daha küçükse
                if (topAsteroid < Math.abs(asteroid)) {
                    stack.pop(); // Stack'teki asteroit patlar
                }
                // Eğer eşit büyüklükteyse
                else if (topAsteroid == Math.abs(asteroid)) {
                    stack.pop(); // Stack'teki asteroit patlar
                    destroyed = true; // Şu anki asteroit de patlar
                }
                // Eğer stack'teki asteroit daha büyükse
                else {
                    destroyed = true; // Şu anki asteroit patlar
                }
            }
            
            // Eğer mevcut asteroit patlamadıysa, stack'e ekle
            if (!destroyed) {
                stack.push(asteroid);
            }
        }
        
        // Stack'i bir diziye dönüştür
        int[] result = new int[stack.size()];
        for (int i = stack.size() - 1; i >= 0; i--) {
            result[i] = stack.pop();
        }
        
        return result;
    }
}