Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

 

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false

class Solution {
    public boolean isSubsequence(String s, String t) {
        // s boşsa, her zaman alt dizi sayılır..
        if (s.length() == 0) return true;
        
        int sIndex = 0;
        int tIndex = 0;
        
        // t dizisinde ilerlerken s dizisindeki karakterleri sırayla arıyoruz
        while (tIndex < t.length()) {
            // Eğer karakterler eşleşirse s'de bir sonraki karaktere geçiyoruz
            if (s.charAt(sIndex) == t.charAt(tIndex)) {
                sIndex++;
                // Eğer s'in sonuna gelmişsek, tüm karakterleri bulduk demektir
                if (sIndex == s.length()) return true;
            }
            // Her durumda t dizisinde ilerliyoruz
            tIndex++;
        }
        
        // Eğer t'yi bitirdik ama s'in tüm karakterlerini bulamadıysak false
        return false;
    }
}
