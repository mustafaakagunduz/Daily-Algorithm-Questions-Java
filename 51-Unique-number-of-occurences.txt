Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

-----

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true

--------

Bu çözümde:

-Önce her sayının tekrarlanma sayısını hesaplamak için HashMap kullanıyoruz.
-Sonra, bu tekrarlanma sayılarını bir HashSet'e ekliyoruz.
-HashSet'e eleman eklerken, eğer zaten o sayı varsa add metodu false döndürür. Bu durumda, iki sayı aynı miktarda tekrarlanmış demektir ve false döndürmeliyiz.
-Eğer tüm tekrarlanma sayıları başarıyla HashSet'e eklendiyse, hepsi benzersizdir ve true döndürmeliyiz.

------------

class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        
        Map<Integer, Integer> map = new HashMap<>();        
        
        for (int i : arr) {
            
            map.put(i, map.getOrDefault(i, 0) + 1);
        }
        
        Set<Integer> occurrencesSet = new HashSet<>();
        
        for (int count : map.values()) {
            
            if (!occurrencesSet.add(count)) {
                return false;
            }
        }
        
        return true;
    }
}
