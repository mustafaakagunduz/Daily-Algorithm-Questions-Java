Greatest Common Divisor of Strings..

For two strings s and t, we say "t divides s" if and only if s = t + t + t + ... + t + t (i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

 

Example 1:

Input: str1 = "ABCABC", str2 = "ABC"
Output: "ABC"

public class Solution {
    public String gcdOfStrings(String str1, String str2) {
        // Eğer birleştirilmiş haller eşit değilse, ortak bölen yoktur.
        if (!(str1 + str2).equals(str2 + str1)) {
            return "";
        }
        
        // String uzunluklarının GCD'sini hesapla.
        int gcdLength = gcd(str1.length(), str2.length());
        
        // GCD uzunluğu kadar substring al.
        return str1.substring(0, gcdLength);
    }

    // İki sayının GCD'sini hesaplayan yöntem (Euclid Algoritması).
    private int gcd(int a, int b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        
        // Örnek testler
        System.out.println(solution.gcdOfStrings("ABCABC", "ABC")); // Çıktı: "ABC"
        System.out.println(solution.gcdOfStrings("ABABAB", "ABAB")); // Çıktı: "AB"
        System.out.println(solution.gcdOfStrings("LEET", "CODE"));   // Çıktı: ""
    }
}
