Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements...

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]


swaplı çözüm:

class Solution {
    public void moveZeroes(int[] nums) {
        // nonZeroIndex, sıfır olmayan sayıları yerleştireceğimiz pozisyonu tutar
        int nonZeroIndex = 0;
        
        // İlk geçiş: Sıfır olmayan tüm sayıları dizinin başına taşı
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 0) {
                // Swap işlemi sadece farklı indeksler için yapılır
                if (i != nonZeroIndex) {
                    int temp = nums[nonZeroIndex];
                    nums[nonZeroIndex] = nums[i];
                    nums[i] = temp;
                }
                nonZeroIndex++;
            }
        }
    }
}

benim çözüm(sıfırların sayısını tutup sondan eklemeli):

class Solution {
    public void moveZeroes(int[] nums) {

        int nonZeroIndex = 0;
        int zeroCounter=0;

        for(int i = 0; i<nums.length; i++){
            if(nums[i] != 0){
                nums[nonZeroIndex] = nums[i];
                nonZeroIndex++;
            } else zeroCounter++;
        }

        for(int i=0; i<nums.length; i++){
            if(zeroCounter > 0){
                nums[nums.length-1-i] = 0;
                zeroCounter--;
            }
            
        }        
        
    }
}

.
